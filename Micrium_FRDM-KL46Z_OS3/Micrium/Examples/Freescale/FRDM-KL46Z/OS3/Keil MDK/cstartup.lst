


ARM Macro Assembler    Page 1 


    1 00000000         #line   1                "..\\..\\BSP\\KeilMDK\\cstartup
.s"
    1 00000000         ;
    2 00000000         
    3 00000000         
    4 00000000         
    5 00000000         
    6 00000000         
    7 00000000         
    8 00000000         
    9 00000000         
   10 00000000         
   11 00000000         
   12 00000000         
   13 00000000         
   14 00000000         
   15 00000000         ; <h> Stack Configuration
   16 00000000         ;   <o> Stack Size (in Bytes) <0x0-0xFFFFFFFF:8>
   17 00000000         ; </h>
   18 00000000         #line   1                "..\\bsp_cfg.h"
    1 00000000         
    2 00000000         
    3 00000000         
    4 00000000         
    5 00000000         
    6 00000000         
    7 00000000         
    8 00000000         
    9 00000000         
   10 00000000         
   11 00000000         
   12 00000000         
   13 00000000         
   14 00000000         
   15 00000000         
   16 00000000         
   17 00000000         
   18 00000000         
   19 00000000         
   20 00000000         
   21 00000000         
   22 00000000         
   23 00000000         
   24 00000000         
   25 00000000         
   26 00000000         
   27 00000000         
   28 00000000         
   29 00000000         
   30 00000000         
   31 00000000         
   32 00000000         
   33 00000000         
   34 00000000         
   35 00000000         
   36 00000000         
   37 00000000         
   38 00000000         
   39 00000000         



ARM Macro Assembler    Page 2 


   40 00000000         
   41 00000000         
   42 00000000         
   43 00000000         
   44 00000000         
   45 00000000         
   46 00000000         
   47 00000000         
   48 00000000         #line   19               "..\\..\\BSP\\KeilMDK\\cstartup
.s"
   19 00000000         
   20 00000000 00000100 
                       Stack_Size
                               EQU              0x00000100
   21 00000000         
   22 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN
=3
   23 00000000         Stack_Mem
                               SPACE            Stack_Size
   24 00000100         __initial_sp
   25 00000100         
   26 00000100         
   27 00000100         ; <h> Heap Configuration
   28 00000100         ;   <o>  Heap Size (in Bytes) <0x0-0xFFFFFFFF:8>
   29 00000100         ; </h>
   30 00000100         
   31 00000100 00000000 
                       Heap_Size
                               EQU              0x00000000
   32 00000100         
   33 00000100                 AREA             HEAP, NOINIT, READWRITE, ALIGN=
3
   34 00000000         __heap_base
   35 00000000         Heap_Mem
                               SPACE            Heap_Size
   36 00000000         __heap_limit
   37 00000000         
   38 00000000         
   39 00000000                 PRESERVE8
   40 00000000                 THUMB
   41 00000000         
   42 00000000         
   43 00000000         ; Vector Table Mapped to Address 0 at Reset
   44 00000000                 IMPORT           BSP_IntHandlerDMA0
   45 00000000                 IMPORT           BSP_IntHandlerDMA1
   46 00000000                 IMPORT           BSP_IntHandlerDMA2
   47 00000000                 IMPORT           BSP_IntHandlerDMA3
   48 00000000                 IMPORT           BSP_IntHandlerRSVD4
   49 00000000                 IMPORT           BSP_IntHandlerFTFA
   50 00000000                 IMPORT           BSP_IntHandlerLVD
   51 00000000                 IMPORT           BSP_IntHandlerLLWU
   52 00000000                 IMPORT           BSP_IntHandlerI2C0
   53 00000000                 IMPORT           BSP_IntHandlerI2C1
   54 00000000                 IMPORT           BSP_IntHandlerSPI0
   55 00000000                 IMPORT           BSP_IntHandlerSPI1
   56 00000000                 IMPORT           BSP_IntHandlerUART0_RX_TX
   57 00000000                 IMPORT           BSP_IntHandlerUART1_RX_TX
   58 00000000                 IMPORT           BSP_IntHandlerUART2_RX_TX
   59 00000000                 IMPORT           BSP_IntHandlerADC0



ARM Macro Assembler    Page 3 


   60 00000000                 IMPORT           BSP_IntHandlerCMP0
   61 00000000                 IMPORT           BSP_IntHandlerTPM0
   62 00000000                 IMPORT           BSP_IntHandlerTPM1
   63 00000000                 IMPORT           BSP_IntHandlerTPM2
   64 00000000                 IMPORT           BSP_IntHandlerRTC_ALARM
   65 00000000                 IMPORT           BSP_IntHandlerRTC_SECONDS
   66 00000000                 IMPORT           BSP_IntHandlerPIT
   67 00000000                 IMPORT           BSP_IntHandlerI2S0
   68 00000000                 IMPORT           BSP_IntHandlerUSB_OTG
   69 00000000                 IMPORT           BSP_IntHandlerDAC0
   70 00000000                 IMPORT           BSP_IntHandlerTSI0
   71 00000000                 IMPORT           BSP_IntHandlerMCG
   72 00000000                 IMPORT           BSP_IntHandlerLPTMR0
   73 00000000                 IMPORT           BSP_IntHandlerSLCD
   74 00000000                 IMPORT           BSP_IntHandlerPORT_A
   75 00000000                 IMPORT           BSP_IntHandlerPORT_C_D
   76 00000000         
   77 00000000         
   78 00000000                 IMPORT           OS_CPU_PendSVHandler
   79 00000000                 IMPORT           OS_CPU_SysTickHandler
   80 00000000         
   81 00000000         
   82 00000000         
   83 00000000                 AREA             RESET, DATA, READONLY
   84 00000000                 EXPORT           __Vectors
   85 00000000                 EXPORT           __Vectors_End
   86 00000000                 EXPORT           __Vectors_Size
   87 00000000         
   88 00000000 00000000 
                       __Vectors
                               DCD              __initial_sp ; 000 Initial stac
                                                            k pointer.
   89 00000004 00000000        DCD              App_Reset_ISR ; 001 Initial pro
                                                            gram counter.
   90 00000008 00000000        DCD              App_NMI_ISR ; 002 Non-maskable 
                                                            interrupt.
   91 0000000C 00000000        DCD              App_Fault_ISR ; 003 Hard fault 
                                                            exception.
   92 00000010 00000000        DCD              App_Spurious_ISR ; 004 Reserved
                                                             interrupt 4.
   93 00000014 00000000        DCD              App_Spurious_ISR ; 005 Bus faul
                                                            t exception.
   94 00000018 00000000        DCD              App_Spurious_ISR ; 006 Usage fa
                                                            ult exception.
   95 0000001C 00000000        DCD              App_Spurious_ISR ; 007 Reserved
                                                             interrupt 7.
   96 00000020 00000000        DCD              App_Spurious_ISR ; 008 Reserved
                                                             interrupt 8.
   97 00000024 00000000        DCD              App_Spurious_ISR ; 009 Reserved
                                                             interrupt 9.
   98 00000028 00000000        DCD              App_Spurious_ISR ; 010 Reserved
                                                             interrupt 10.
   99 0000002C 00000000        DCD              App_Spurious_ISR ; 011 A superv
                                                            isor call exception
                                                            .
  100 00000030 00000000        DCD              App_Spurious_ISR ; 012 Debug Mo
                                                            nitor.
  101 00000034 00000000        DCD              App_Spurious_ISR ; 013 Reserved
                                                             interrupt 13.



ARM Macro Assembler    Page 4 


  102 00000038         
  103 00000038         
  104 00000038 00000000        DCD              OS_CPU_PendSVHandler ; 014 Pend
                                                            SV exception.
  105 0000003C 00000000        DCD              OS_CPU_SysTickHandler ; 015 Sys
                                                            Tick Interrupt.
  106 00000040         
  107 00000040         
  108 00000040         
  109 00000040         
  110 00000040         
  111 00000040         ; External Interrupts
  112 00000040 00000000        DCD              BSP_IntHandlerDMA0 ; 016 IRQ[  
                                                            0] DMA Channel  0 T
                                                            ransfer Complete.
  113 00000044 00000000        DCD              BSP_IntHandlerDMA1 ; 017 IRQ[  
                                                            1] DMA Channel 1 Tr
                                                            ansfer Complete
  114 00000048 00000000        DCD              BSP_IntHandlerDMA2 ; 018 IRQ[  
                                                            2] DMA Channel 2 Tr
                                                            ansfer Complete
  115 0000004C 00000000        DCD              BSP_IntHandlerDMA3 ; 019 IRQ[  
                                                            3] DMA Channel 3 Tr
                                                            ansfer Complete
  116 00000050 00000000        DCD              BSP_IntHandlerRSVD4
  117 00000054 00000000        DCD              BSP_IntHandlerFTFA ; 021 IRQ[  
                                                            5] Flash.
  118 00000058 00000000        DCD              BSP_IntHandlerLVD ; 022 IRQ[  6
                                                            ] Low voltage detec
                                                            t.
  119 0000005C 00000000        DCD              BSP_IntHandlerLLWU ; 023 IRQ[  
                                                            7] Low Leakage Wake
                                                            up
  120 00000060 00000000        DCD              BSP_IntHandlerI2C0 ; 024 IRQ[  
                                                            8] I2C0 interrupt
  121 00000064 00000000        DCD              BSP_IntHandlerI2C1 ; 025 IRQ[  
                                                            9] I2C1 interrupt
  122 00000068 00000000        DCD              BSP_IntHandlerSPI0 ; 026 IRQ[ 1
                                                            0] Single interrupt
                                                             vector for all sou
                                                            rces
  123 0000006C 00000000        DCD              BSP_IntHandlerSPI1 ; 027 IRQ[ 1
                                                            1] Single interrupt
                                                             vector for all sou
                                                            rces
  124 00000070 00000000        DCD              BSP_IntHandlerUART0_RX_TX ; 028
                                                             IRQ[ 12] UART0 Rec
                                                            eive/Transmit inter
                                                            rupt
  125 00000074 00000000        DCD              BSP_IntHandlerUART1_RX_TX ; 029
                                                             IRQ[ 13] UART1 Rec
                                                            eive/Transmit inter
                                                            rupt
  126 00000078 00000000        DCD              BSP_IntHandlerUART2_RX_TX ; 030
                                                             IRQ[ 14] UART2 Rec
                                                            eive/Transmit inter
                                                            rupt
  127 0000007C 00000000        DCD              BSP_IntHandlerADC0 ; 031 IRQ[ 1
                                                            5] ADC0 interrupt



ARM Macro Assembler    Page 5 


  128 00000080 00000000        DCD              BSP_IntHandlerCMP0 ; 032 IRQ[ 1
                                                            6] CMP0 interrupt
  129 00000084 00000000        DCD              BSP_IntHandlerTPM0 ; 033 IRQ[ 1
                                                            7] TPM0 interrupt
  130 00000088 00000000        DCD              BSP_IntHandlerTPM1 ; 034 IRQ[ 1
                                                            8] TPM1 interrupt
  131 0000008C 00000000        DCD              BSP_IntHandlerTPM2 ; 035 IRQ[ 1
                                                            9] TPM2 interrupt
  132 00000090 00000000        DCD              BSP_IntHandlerRTC_ALARM ; 036 I
                                                            RQ[ 20] RTC alarm i
                                                            nterrupt
  133 00000094 00000000        DCD              BSP_IntHandlerRTC_SECONDS ; 037
                                                             IRQ[ 21] RTC secon
                                                            ds interrupt
  134 00000098 00000000        DCD              BSP_IntHandlerPIT ; 038 IRQ[ 22
                                                            ] Single interrupt 
                                                            vector for all chan
                                                            nels
  135 0000009C 00000000        DCD              BSP_IntHandlerI2S0 ; 039 IRQ[ 2
                                                            3] Single interrupt
                                                             vector for all sou
                                                            rces
  136 000000A0 00000000        DCD              BSP_IntHandlerUSB_OTG ; 040 IRQ
                                                            [ 24] USB OTG inter
                                                            rupt
  137 000000A4 00000000        DCD              BSP_IntHandlerDAC0 ; 041 IRQ[ 2
                                                            5] DAC0 interrupt
  138 000000A8 00000000        DCD              BSP_IntHandlerTSI0 ; 042 IRQ[ 2
                                                            6] TSI0 interrupt
  139 000000AC 00000000        DCD              BSP_IntHandlerMCG ; 043 IRQ[ 27
                                                            ] MCG Interrupt
  140 000000B0 00000000        DCD              BSP_IntHandlerLPTMR0 ; 044 IRQ[
                                                             28] LPTMR0 interru
                                                            pt
  141 000000B4 00000000        DCD              BSP_IntHandlerSLCD ; 045 IRQ[ 2
                                                            9] LCD Controller i
                                                            nterrupt
  142 000000B8 00000000        DCD              BSP_IntHandlerPORT_A ; 046 IRQ[
                                                             30] Port A interru
                                                            pt
  143 000000BC 00000000        DCD              BSP_IntHandlerPORT_C_D ; 047 IR
                                                            Q[ 31] Single inter
                                                            rupt vector for Por
                                                            ts C & D
  144 000000C0         __Vectors_End
  145 000000C0         
  146 000000C0         
  147 000000C0 000000C0 
                       __Vectors_Size
                               EQU              __Vectors_End - __Vectors
  148 000000C0         
  149 000000C0         ; <h> Flash Configuration
  150 000000C0         ;   <i> 16-byte flash configuration field that stores de
                       fault protection settings (loaded on reset)
  151 000000C0         ;   <i> and security information that allows the MCU to 
                       restrict acces to the FTFL module.
  152 000000C0         ;   <h> Backdoor Comparison Key
  153 000000C0         ;     <o0>  Backdoor Key 0  <0x0-0xFF:2>
  154 000000C0         ;     <o1>  Backdoor Key 1  <0x0-0xFF:2>



ARM Macro Assembler    Page 6 


  155 000000C0         ;     <o2>  Backdoor Key 2  <0x0-0xFF:2>
  156 000000C0         ;     <o3>  Backdoor Key 3  <0x0-0xFF:2>
  157 000000C0         ;     <o4>  Backdoor Key 4  <0x0-0xFF:2>
  158 000000C0         ;     <o5>  Backdoor Key 5  <0x0-0xFF:2>
  159 000000C0         ;     <o6>  Backdoor Key 6  <0x0-0xFF:2>
  160 000000C0         ;     <o7>  Backdoor Key 7  <0x0-0xFF:2>
  161 000000C0 000000FF 
                       BackDoorK0
                               EQU              0xFF
  162 000000C0 000000FF 
                       BackDoorK1
                               EQU              0xFF
  163 000000C0 000000FF 
                       BackDoorK2
                               EQU              0xFF
  164 000000C0 000000FF 
                       BackDoorK3
                               EQU              0xFF
  165 000000C0 000000FF 
                       BackDoorK4
                               EQU              0xFF
  166 000000C0 000000FF 
                       BackDoorK5
                               EQU              0xFF
  167 000000C0 000000FF 
                       BackDoorK6
                               EQU              0xFF
  168 000000C0 000000FF 
                       BackDoorK7
                               EQU              0xFF
  169 000000C0         ;   </h>
  170 000000C0         ;   <h> Program flash protection bytes (FPROT)
  171 000000C0         ;     <i> Each program flash region can be protected fro
                       m program and erase operation by setting the associated 
                       PROT bit.
  172 000000C0         ;     <i> Each bit protects a 1/32 region of the program
                        flash memory.
  173 000000C0         ;     <h> FPROT0
  174 000000C0         ;       <i> Program flash protection bytes
  175 000000C0         ;       <i> 1/32 - 8/32 region
  176 000000C0         ;       <o.0>   FPROT0.0
  177 000000C0         ;       <o.1>   FPROT0.1
  178 000000C0         ;       <o.2>   FPROT0.2
  179 000000C0         ;       <o.3>   FPROT0.3
  180 000000C0         ;       <o.4>   FPROT0.4
  181 000000C0         ;       <o.5>   FPROT0.5
  182 000000C0         ;       <o.6>   FPROT0.6
  183 000000C0         ;       <o.7>   FPROT0.7
  184 000000C0 00000000 
                       nFPROT0 EQU              0x00
  185 000000C0 000000FF 
                       FPROT0  EQU              nFPROT0:EOR:0xFF
  186 000000C0         ;     </h>
  187 000000C0         ;     <h> FPROT1
  188 000000C0         ;       <i> Program Flash Region Protect Register 1
  189 000000C0         ;       <i> 9/32 - 16/32 region
  190 000000C0         ;       <o.0>   FPROT1.0
  191 000000C0         ;       <o.1>   FPROT1.1
  192 000000C0         ;       <o.2>   FPROT1.2



ARM Macro Assembler    Page 7 


  193 000000C0         ;       <o.3>   FPROT1.3
  194 000000C0         ;       <o.4>   FPROT1.4
  195 000000C0         ;       <o.5>   FPROT1.5
  196 000000C0         ;       <o.6>   FPROT1.6
  197 000000C0         ;       <o.7>   FPROT1.7
  198 000000C0 00000000 
                       nFPROT1 EQU              0x00
  199 000000C0 000000FF 
                       FPROT1  EQU              nFPROT1:EOR:0xFF
  200 000000C0         ;     </h>
  201 000000C0         ;     <h> FPROT2
  202 000000C0         ;       <i> Program Flash Region Protect Register 2
  203 000000C0         ;       <i> 17/32 - 24/32 region
  204 000000C0         ;       <o.0>   FPROT2.0
  205 000000C0         ;       <o.1>   FPROT2.1
  206 000000C0         ;       <o.2>   FPROT2.2
  207 000000C0         ;       <o.3>   FPROT2.3
  208 000000C0         ;       <o.4>   FPROT2.4
  209 000000C0         ;       <o.5>   FPROT2.5
  210 000000C0         ;       <o.6>   FPROT2.6
  211 000000C0         ;       <o.7>   FPROT2.7
  212 000000C0 00000000 
                       nFPROT2 EQU              0x00
  213 000000C0 000000FF 
                       FPROT2  EQU              nFPROT2:EOR:0xFF
  214 000000C0         ;     </h>
  215 000000C0         ;     <h> FPROT3
  216 000000C0         ;       <i> Program Flash Region Protect Register 3
  217 000000C0         ;       <i> 25/32 - 32/32 region
  218 000000C0         ;       <o.0>   FPROT3.0
  219 000000C0         ;       <o.1>   FPROT3.1
  220 000000C0         ;       <o.2>   FPROT3.2
  221 000000C0         ;       <o.3>   FPROT3.3
  222 000000C0         ;       <o.4>   FPROT3.4
  223 000000C0         ;       <o.5>   FPROT3.5
  224 000000C0         ;       <o.6>   FPROT3.6
  225 000000C0         ;       <o.7>   FPROT3.7
  226 000000C0 00000000 
                       nFPROT3 EQU              0x00
  227 000000C0 000000FF 
                       FPROT3  EQU              nFPROT3:EOR:0xFF
  228 000000C0         ;     </h>
  229 000000C0         ;   </h>
  230 000000C0         ;   </h>
  231 000000C0         ;   <h> Flash nonvolatile option byte (FOPT)
  232 000000C0         ;     <i> Allows the user to customize the operation of 
                       the MCU at boot time.
  233 000000C0         ;     <o.0>  LPBOOT0
  234 000000C0         ;       <0=> Core and system clock divider (OUTDIV1) is 
                       0x7 (divide by 8) or 0x3 (divide by 4)
  235 000000C0         ;       <1=> Core and system clock divider (OUTDIV1) is 
                       0x1 (divide by 2) or 0x0 (divide by 1)
  236 000000C0         ;     <o.4>  LPBOOT1
  237 000000C0         ;       <0=> Core and system clock divider (OUTDIV1) is 
                       0x7 (divide by 8) or 0x1 (divide by 2)
  238 000000C0         ;       <1=> Core and system clock divider (OUTDIV1) is 
                       0x3 (divide by 4) or 0x0 (divide by 1)
  239 000000C0         ;     <o.2>  NMI_DIS
  240 000000C0         ;       <0=> NMI interrupts are always blocked



ARM Macro Assembler    Page 8 


  241 000000C0         ;       <1=> NMI pin/interrupts reset default to enabled
                       
  242 000000C0         ;     <o.3>  RESET_PIN_CFG
  243 000000C0         ;       <0=> RESET pin is disabled following a POR and c
                       annot be enabled as RESET function
  244 000000C0         ;       <1=> RESET pin is dedicated
  245 000000C0         ;     <o.3>  FAST_INIT
  246 000000C0         ;       <0=> Slower initialization
  247 000000C0         ;       <1=> Fast Initialization
  248 000000C0 000000FF 
                       FOPT    EQU              0xFF
  249 000000C0         ;   </h>
  250 000000C0         ;   <h> Flash security byte (FSEC)
  251 000000C0         ;     <i> WARNING: If SEC field is configured as "MCU se
                       curity status is secure" and MEEN field is configured as
                        "Mass erase is disabled",
  252 000000C0         ;     <i> MCU's security status cannot be set back to un
                       secure state since Mass erase via the debugger is blocke
                       d !!!
  253 000000C0         ;     <o.0..1> SEC
  254 000000C0         ;       <2=> MCU security status is unsecure
  255 000000C0         ;       <3=> MCU security status is secure
  256 000000C0         ;         <i> Flash Security
  257 000000C0         ;         <i> This bits define the security state of the
                        MCU.
  258 000000C0         ;     <o.2..3> FSLACC
  259 000000C0         ;       <2=> Freescale factory access denied
  260 000000C0         ;       <3=> Freescale factory access granted
  261 000000C0         ;         <i> Freescale Failure Analysis Access Code
  262 000000C0         ;         <i> This bits define the security state of the
                        MCU.
  263 000000C0         ;     <o.4..5> MEEN
  264 000000C0         ;       <2=> Mass erase is disabled
  265 000000C0         ;       <3=> Mass erase is enabled
  266 000000C0         ;         <i> Mass Erase Enable Bits
  267 000000C0         ;         <i> Enables and disables mass erase capability
                        of the FTFL module
  268 000000C0         ;     <o.6..7> KEYEN
  269 000000C0         ;       <2=> Backdoor key access enabled
  270 000000C0         ;       <3=> Backdoor key access disabled
  271 000000C0         ;         <i> Backdoor key Security Enable
  272 000000C0         ;         <i> These bits enable and disable backdoor key
                        access to the FTFL module.
  273 000000C0 000000FE 
                       FSEC    EQU              0xFE
  274 000000C0         ;   </h>
  275 000000C0         
  276 000000C0                 IF               :LNOT::DEF:RAM_TARGET
  277 000000C0                 AREA             |.ARM.__at_0x400|, CODE, READON
LY
  278 00000000 FF FF FF 
              FF               DCB              BackDoorK0, BackDoorK1, BackDoo
rK2, BackDoorK3
  279 00000004 FF FF FF 
              FF               DCB              BackDoorK4, BackDoorK5, BackDoo
rK6, BackDoorK7
  280 00000008 FF FF FF 
              FF               DCB              FPROT0,     FPROT1,     FPROT2,
     FPROT3



ARM Macro Assembler    Page 9 


  281 0000000C FE FF FF 
              FF               DCB              FSEC,       FOPT,       0xFF,  
   0xFF
  282 00000010                 ENDIF
  283 00000010         
  284 00000010                 AREA             |.text|, CODE, READONLY
  285 00000000         
  286 00000000         
  287 00000000         ; Reset Handler
  288 00000000 40048100 
                       SIM_COPC
                               EQU              0x40048100
  289 00000000         
  290 00000000         App_Reset_ISR
                               PROC
  291 00000000                 EXPORT           App_Reset_ISR             [WEAK
]
  292 00000000                 IMPORT           __main
  293 00000000         
  294 00000000 2000            MOVS             R0, #0x00
  295 00000002 4906            LDR              R1, =SIM_COPC
  296 00000004 6008            STR              R0, [R1]    ; Disable the watch
                                                            dog timer.
  297 00000006         
  298 00000006 4806            LDR              R0, =__main
  299 00000008 4700            BX               R0
  300 0000000A                 ENDP
  301 0000000A         
  302 0000000A         
  303 0000000A         ; Dummy Exception Handlers (infinite loops which can be 
                       modified)
  304 0000000A         
  305 0000000A         App_NMI_ISR
                               PROC
  306 0000000A         
  307 0000000A                 EXPORT           App_NMI_ISR               [WEAK
]
  308 0000000A E7FE            B                .
  309 0000000C                 ENDP
  310 0000000C         App_Fault_ISR
                               PROC
  311 0000000C         
  312 0000000C                 EXPORT           App_Fault_ISR             [WEAK
]
  313 0000000C E7FE            B                .
  314 0000000E                 ENDP
  315 0000000E         App_Spurious_ISR
                               PROC
  316 0000000E         
  317 0000000E                 EXPORT           App_Spurious_ISR          [WEAK
]
  318 0000000E E7FE            B                .
  319 00000010                 ENDP
  320 00000010         
  321 00000010         
  322 00000010         
  323 00000010         ; User Initial Stack & Heap
  324 00000010         
  325 00000010                 IF               :DEF:__MICROLIB



ARM Macro Assembler    Page 10 


  332 00000010         
  333 00000010                 IMPORT           __use_two_region_memory
  334 00000010                 EXPORT           __user_initial_stackheap
  335 00000010         __user_initial_stackheap
  336 00000010         
  337 00000010 4804            LDR              R0, =  Heap_Mem
  338 00000012 4905            LDR              R1, =(Stack_Mem + Stack_Size)
  339 00000014 4A03            LDR              R2, = (Heap_Mem +  Heap_Size)
  340 00000016 4B05            LDR              R3, = Stack_Mem
  341 00000018 4770            BX               LR
  342 0000001A         
  343 0000001A 00 00           ALIGN
  344 0000001C         
  345 0000001C                 ENDIF
  346 0000001C         
  347 0000001C         
  348 0000001C                 END
              40048100 
              00000000 
              00000000 
              00000100 
              00000000 
Command Line: --debug --xref --cpreproc --diag_suppress=9931 --cpu=Cortex-M0+ -
-apcs=interwork --depend=.\output\cstartup.d -o.\output\cstartup.o -I.. -I"C:\U
sers\Administrator\Desktop\learning_20151113\KL46_StepCounter\Micrium_FRDM-KL46
Z_OS3\Micrium\Examples\Freescale\FRDM-KL46Z\OS3\Keil MDK\RTE" -ID:\Keil_v5\ARM\
PACK\Keil\Kinetis_KLxx_DFP\1.8.0\Device\Include -ID:\Keil_v5\ARM\CMSIS\Include 
--predefine="__UVISION_VERSION SETA 515" --predefine="MKL46Z256xxx4 SETA 1" --l
ist=.\cstartup.lst ..\..\BSP\KeilMDK\cstartup.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STACK 00000000

Symbol: STACK
   Definitions
      At line 22 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      None
Comment: STACK unused
Stack_Mem 00000000

Symbol: Stack_Mem
   Definitions
      At line 23 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 338 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
      At line 340 in file ..\\..\\BSP\\KeilMDK\\cstartup.s

__initial_sp 00000100

Symbol: __initial_sp
   Definitions
      At line 24 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 88 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
Comment: __initial_sp used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

HEAP 00000000

Symbol: HEAP
   Definitions
      At line 33 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      None
Comment: HEAP unused
Heap_Mem 00000000

Symbol: Heap_Mem
   Definitions
      At line 35 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 337 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
      At line 339 in file ..\\..\\BSP\\KeilMDK\\cstartup.s

__heap_base 00000000

Symbol: __heap_base
   Definitions
      At line 34 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      None
Comment: __heap_base unused
__heap_limit 00000000

Symbol: __heap_limit
   Definitions
      At line 36 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      None
Comment: __heap_limit unused
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RESET 00000000

Symbol: RESET
   Definitions
      At line 83 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      None
Comment: RESET unused
__Vectors 00000000

Symbol: __Vectors
   Definitions
      At line 88 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 84 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
      At line 147 in file ..\\..\\BSP\\KeilMDK\\cstartup.s

__Vectors_End 000000C0

Symbol: __Vectors_End
   Definitions
      At line 144 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 85 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
      At line 147 in file ..\\..\\BSP\\KeilMDK\\cstartup.s

3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.ARM.__at_0x400 00000000

Symbol: .ARM.__at_0x400
   Definitions
      At line 277 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      None
Comment: .ARM.__at_0x400 unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 284 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      None
Comment: .text unused
App_Fault_ISR 0000000C

Symbol: App_Fault_ISR
   Definitions
      At line 310 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 91 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
      At line 312 in file ..\\..\\BSP\\KeilMDK\\cstartup.s

App_NMI_ISR 0000000A

Symbol: App_NMI_ISR
   Definitions
      At line 305 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 90 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
      At line 307 in file ..\\..\\BSP\\KeilMDK\\cstartup.s

App_Reset_ISR 00000000

Symbol: App_Reset_ISR
   Definitions
      At line 290 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 89 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
      At line 291 in file ..\\..\\BSP\\KeilMDK\\cstartup.s

App_Spurious_ISR 0000000E

Symbol: App_Spurious_ISR
   Definitions
      At line 315 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 92 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
      At line 93 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
      At line 94 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
      At line 95 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
      At line 96 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
      At line 97 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
      At line 98 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
      At line 99 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
      At line 100 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
      At line 101 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
      At line 317 in file ..\\..\\BSP\\KeilMDK\\cstartup.s

__user_initial_stackheap 00000010

Symbol: __user_initial_stackheap
   Definitions
      At line 335 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 334 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
Comment: __user_initial_stackheap used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

BackDoorK0 000000FF

Symbol: BackDoorK0
   Definitions
      At line 161 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 278 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
Comment: BackDoorK0 used once
BackDoorK1 000000FF

Symbol: BackDoorK1
   Definitions
      At line 162 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 278 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
Comment: BackDoorK1 used once
BackDoorK2 000000FF

Symbol: BackDoorK2
   Definitions
      At line 163 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 278 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
Comment: BackDoorK2 used once
BackDoorK3 000000FF

Symbol: BackDoorK3
   Definitions
      At line 164 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 278 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
Comment: BackDoorK3 used once
BackDoorK4 000000FF

Symbol: BackDoorK4
   Definitions
      At line 165 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 279 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
Comment: BackDoorK4 used once
BackDoorK5 000000FF

Symbol: BackDoorK5
   Definitions
      At line 166 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 279 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
Comment: BackDoorK5 used once
BackDoorK6 000000FF

Symbol: BackDoorK6
   Definitions
      At line 167 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 279 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
Comment: BackDoorK6 used once
BackDoorK7 000000FF

Symbol: BackDoorK7



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 168 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 279 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
Comment: BackDoorK7 used once
FOPT 000000FF

Symbol: FOPT
   Definitions
      At line 248 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 281 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
Comment: FOPT used once
FPROT0 000000FF

Symbol: FPROT0
   Definitions
      At line 185 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 280 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
Comment: FPROT0 used once
FPROT1 000000FF

Symbol: FPROT1
   Definitions
      At line 199 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 280 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
Comment: FPROT1 used once
FPROT2 000000FF

Symbol: FPROT2
   Definitions
      At line 213 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 280 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
Comment: FPROT2 used once
FPROT3 000000FF

Symbol: FPROT3
   Definitions
      At line 227 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 280 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
Comment: FPROT3 used once
FSEC 000000FE

Symbol: FSEC
   Definitions
      At line 273 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 281 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
Comment: FSEC used once
Heap_Size 00000000

Symbol: Heap_Size
   Definitions
      At line 31 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      At line 35 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
      At line 339 in file ..\\..\\BSP\\KeilMDK\\cstartup.s

SIM_COPC 40048100

Symbol: SIM_COPC
   Definitions
      At line 288 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 295 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
Comment: SIM_COPC used once
Stack_Size 00000100

Symbol: Stack_Size
   Definitions
      At line 20 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 23 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
      At line 338 in file ..\\..\\BSP\\KeilMDK\\cstartup.s

__Vectors_Size 000000C0

Symbol: __Vectors_Size
   Definitions
      At line 147 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 86 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
Comment: __Vectors_Size used once
nFPROT0 00000000

Symbol: nFPROT0
   Definitions
      At line 184 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 185 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
Comment: nFPROT0 used once
nFPROT1 00000000

Symbol: nFPROT1
   Definitions
      At line 198 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 199 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
Comment: nFPROT1 used once
nFPROT2 00000000

Symbol: nFPROT2
   Definitions
      At line 212 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 213 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
Comment: nFPROT2 used once
nFPROT3 00000000

Symbol: nFPROT3
   Definitions
      At line 226 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 227 in file ..\\..\\BSP\\KeilMDK\\cstartup.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

Comment: nFPROT3 used once
22 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

BSP_IntHandlerADC0 00000000

Symbol: BSP_IntHandlerADC0
   Definitions
      At line 59 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 127 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
Comment: BSP_IntHandlerADC0 used once
BSP_IntHandlerCMP0 00000000

Symbol: BSP_IntHandlerCMP0
   Definitions
      At line 60 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 128 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
Comment: BSP_IntHandlerCMP0 used once
BSP_IntHandlerDAC0 00000000

Symbol: BSP_IntHandlerDAC0
   Definitions
      At line 69 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 137 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
Comment: BSP_IntHandlerDAC0 used once
BSP_IntHandlerDMA0 00000000

Symbol: BSP_IntHandlerDMA0
   Definitions
      At line 44 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 112 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
Comment: BSP_IntHandlerDMA0 used once
BSP_IntHandlerDMA1 00000000

Symbol: BSP_IntHandlerDMA1
   Definitions
      At line 45 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 113 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
Comment: BSP_IntHandlerDMA1 used once
BSP_IntHandlerDMA2 00000000

Symbol: BSP_IntHandlerDMA2
   Definitions
      At line 46 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 114 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
Comment: BSP_IntHandlerDMA2 used once
BSP_IntHandlerDMA3 00000000

Symbol: BSP_IntHandlerDMA3
   Definitions
      At line 47 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 115 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
Comment: BSP_IntHandlerDMA3 used once
BSP_IntHandlerFTFA 00000000

Symbol: BSP_IntHandlerFTFA



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

   Definitions
      At line 49 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 117 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
Comment: BSP_IntHandlerFTFA used once
BSP_IntHandlerI2C0 00000000

Symbol: BSP_IntHandlerI2C0
   Definitions
      At line 52 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 120 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
Comment: BSP_IntHandlerI2C0 used once
BSP_IntHandlerI2C1 00000000

Symbol: BSP_IntHandlerI2C1
   Definitions
      At line 53 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 121 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
Comment: BSP_IntHandlerI2C1 used once
BSP_IntHandlerI2S0 00000000

Symbol: BSP_IntHandlerI2S0
   Definitions
      At line 67 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 135 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
Comment: BSP_IntHandlerI2S0 used once
BSP_IntHandlerLLWU 00000000

Symbol: BSP_IntHandlerLLWU
   Definitions
      At line 51 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 119 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
Comment: BSP_IntHandlerLLWU used once
BSP_IntHandlerLPTMR0 00000000

Symbol: BSP_IntHandlerLPTMR0
   Definitions
      At line 72 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 140 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
Comment: BSP_IntHandlerLPTMR0 used once
BSP_IntHandlerLVD 00000000

Symbol: BSP_IntHandlerLVD
   Definitions
      At line 50 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 118 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
Comment: BSP_IntHandlerLVD used once
BSP_IntHandlerMCG 00000000

Symbol: BSP_IntHandlerMCG
   Definitions
      At line 71 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
External symbols

      At line 139 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
Comment: BSP_IntHandlerMCG used once
BSP_IntHandlerPIT 00000000

Symbol: BSP_IntHandlerPIT
   Definitions
      At line 66 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 134 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
Comment: BSP_IntHandlerPIT used once
BSP_IntHandlerPORT_A 00000000

Symbol: BSP_IntHandlerPORT_A
   Definitions
      At line 74 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 142 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
Comment: BSP_IntHandlerPORT_A used once
BSP_IntHandlerPORT_C_D 00000000

Symbol: BSP_IntHandlerPORT_C_D
   Definitions
      At line 75 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 143 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
Comment: BSP_IntHandlerPORT_C_D used once
BSP_IntHandlerRSVD4 00000000

Symbol: BSP_IntHandlerRSVD4
   Definitions
      At line 48 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 116 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
Comment: BSP_IntHandlerRSVD4 used once
BSP_IntHandlerRTC_ALARM 00000000

Symbol: BSP_IntHandlerRTC_ALARM
   Definitions
      At line 64 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 132 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
Comment: BSP_IntHandlerRTC_ALARM used once
BSP_IntHandlerRTC_SECONDS 00000000

Symbol: BSP_IntHandlerRTC_SECONDS
   Definitions
      At line 65 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 133 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
Comment: BSP_IntHandlerRTC_SECONDS used once
BSP_IntHandlerSLCD 00000000

Symbol: BSP_IntHandlerSLCD
   Definitions
      At line 73 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 141 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
Comment: BSP_IntHandlerSLCD used once
BSP_IntHandlerSPI0 00000000



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
External symbols


Symbol: BSP_IntHandlerSPI0
   Definitions
      At line 54 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 122 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
Comment: BSP_IntHandlerSPI0 used once
BSP_IntHandlerSPI1 00000000

Symbol: BSP_IntHandlerSPI1
   Definitions
      At line 55 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 123 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
Comment: BSP_IntHandlerSPI1 used once
BSP_IntHandlerTPM0 00000000

Symbol: BSP_IntHandlerTPM0
   Definitions
      At line 61 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 129 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
Comment: BSP_IntHandlerTPM0 used once
BSP_IntHandlerTPM1 00000000

Symbol: BSP_IntHandlerTPM1
   Definitions
      At line 62 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 130 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
Comment: BSP_IntHandlerTPM1 used once
BSP_IntHandlerTPM2 00000000

Symbol: BSP_IntHandlerTPM2
   Definitions
      At line 63 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 131 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
Comment: BSP_IntHandlerTPM2 used once
BSP_IntHandlerTSI0 00000000

Symbol: BSP_IntHandlerTSI0
   Definitions
      At line 70 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 138 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
Comment: BSP_IntHandlerTSI0 used once
BSP_IntHandlerUART0_RX_TX 00000000

Symbol: BSP_IntHandlerUART0_RX_TX
   Definitions
      At line 56 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 124 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
Comment: BSP_IntHandlerUART0_RX_TX used once
BSP_IntHandlerUART1_RX_TX 00000000

Symbol: BSP_IntHandlerUART1_RX_TX
   Definitions



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
External symbols

      At line 57 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 125 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
Comment: BSP_IntHandlerUART1_RX_TX used once
BSP_IntHandlerUART2_RX_TX 00000000

Symbol: BSP_IntHandlerUART2_RX_TX
   Definitions
      At line 58 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 126 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
Comment: BSP_IntHandlerUART2_RX_TX used once
BSP_IntHandlerUSB_OTG 00000000

Symbol: BSP_IntHandlerUSB_OTG
   Definitions
      At line 68 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 136 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
Comment: BSP_IntHandlerUSB_OTG used once
OS_CPU_PendSVHandler 00000000

Symbol: OS_CPU_PendSVHandler
   Definitions
      At line 78 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 104 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
Comment: OS_CPU_PendSVHandler used once
OS_CPU_SysTickHandler 00000000

Symbol: OS_CPU_SysTickHandler
   Definitions
      At line 79 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 105 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
Comment: OS_CPU_SysTickHandler used once
__main 00000000

Symbol: __main
   Definitions
      At line 292 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      At line 298 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
Comment: __main used once
__use_two_region_memory 00000000

Symbol: __use_two_region_memory
   Definitions
      At line 333 in file ..\\..\\BSP\\KeilMDK\\cstartup.s
   Uses
      None
Comment: __use_two_region_memory unused
36 symbols
413 symbols in table
